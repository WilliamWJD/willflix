[{"/home/william/Documentos/projects/willflix/src/index.js":"1","/home/william/Documentos/projects/willflix/src/App.js":"2","/home/william/Documentos/projects/willflix/src/tmdb.js":"3","/home/william/Documentos/projects/willflix/src/components/MovieRow/index.js":"4","/home/william/Documentos/projects/willflix/src/components/FeaturedMovie/index.js":"5","/home/william/Documentos/projects/willflix/src/components/Header/index.js":"6"},{"size":197,"mtime":1607870902266,"results":"7","hashOfConfig":"8"},{"size":2134,"mtime":1608036745529,"results":"9","hashOfConfig":"8"},{"size":2563,"mtime":1607879501240,"results":"10","hashOfConfig":"8"},{"size":1808,"mtime":1608036241142,"results":"11","hashOfConfig":"8"},{"size":1816,"mtime":1607882051937,"results":"12","hashOfConfig":"8"},{"size":643,"mtime":1608033556318,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1venx4z",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/william/Documentos/projects/willflix/src/index.js",[],"/home/william/Documentos/projects/willflix/src/App.js",["28"],"/home/william/Documentos/projects/willflix/src/tmdb.js",["29"],"const API_KEY = 'b0f9abc62e9a57c9c3080926bd60655d';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\nconst basicFetch = async (endpoint) => {\n    const request = await fetch(`${API_BASE}${endpoint}`);\n    const json = await request.json();\n    return json;\n}\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title : \"Originais do Netflix\",\n                items : await basicFetch(`/discover/tv/?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title : \"Recomendados para Você\",\n                items : await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'toprated',\n                title : \"Em Alta\",\n                items : await basicFetch(`/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title : \"Ação\",\n                items : await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title : \"Comédia\",\n                items : await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title : \"Terror\",\n                items : await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title : \"Romance\",\n                items : await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n            },            \n            {\n                slug: 'documentary',\n                title : \"Documentários\",\n                items : await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\n            },\n        ]\n    },\n\n    getMovieInfo: async (movieId, type) =>{\n        let info = {};\n\n        if(movieId){\n            switch(type){\n                case 'movie':\n                    info=await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n                break;\n                case 'tv':\n                    info=await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n                break;\n                default:\n                    info=null;\n                break;\n            }\n        }\n\n        return info;\n    }\n}","/home/william/Documentos/projects/willflix/src/components/MovieRow/index.js",[],"/home/william/Documentos/projects/willflix/src/components/FeaturedMovie/index.js",["30","31"],"import React from 'react';\nimport './FeaturedMovie.css';\n\nconst FeaturedMovie = ({ item }) =>{\n    let firstDate = new Date(item.first_air_date);\n    let genres = [];\n\n    for(let i in item.genres){\n        genres.push(item.genres[i].name);\n    }\n\n    return(\n        <section className=\"featured\" style={{\n            backgroundSize:'cover',\n            backgroundPosition:'center',\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n        }}>\n            <div className=\"featured--vertical\">\n                <div className=\"featured--horizontal\">\n                    <div className=\"featured--name\">{item.original_name}</div>\n                    <div className=\"featured--info\">\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n                        <div className=\"featured--seasons\">\n                            {item.number_of_seasons}\n                            {item.number_of_seasons > 1 ? ' temporadas' : ' temporada'}\n                        </div>\n                        <div className=\"featured--description\">{item.overview}</div>\n                        <div className=\"featured--buttons\">\n                            <a href=\"#\" className=\"featured--watchbutton\">▶ Assistir</a>\n                            <a href=\"#\" className=\"featured--mylistbutton\">+ Minha Lista</a>\n                        </div>\n                        <div className=\"featured--genres\">\n                            <strong>Gêneros: </strong>\n                            {genres.join(', ')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default FeaturedMovie;","/home/william/Documentos/projects/willflix/src/components/Header/index.js",[],{"ruleId":"32","severity":1,"message":"33","line":68,"column":36,"nodeType":"34","endLine":68,"endColumn":56},{"ruleId":"35","severity":1,"message":"36","line":10,"column":1,"nodeType":"37","endLine":75,"endColumn":2},{"ruleId":"38","severity":1,"message":"39","line":30,"column":29,"nodeType":"40","endLine":30,"endColumn":75},{"ruleId":"38","severity":1,"message":"39","line":31,"column":29,"nodeType":"40","endLine":31,"endColumn":76},"jsx-a11y/aria-props","aria-lavel: This attribute is an invalid ARIA attribute. Did you mean to use aria-label,aria-level?","JSXAttribute","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]